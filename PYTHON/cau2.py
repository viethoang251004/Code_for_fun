import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt
import math as m
import sympy as sp
#(a)
z_func = lambda x, y: np.cos(x) * np.cos(y) * m.e ** (-np.sqrt(x * x + y * y) / 4)
x = np.arange(-6, 6.1, 0.1)
y = x.copy()
X, Y = np.meshgrid(x, y)
print(X)
print(Y)
Z = z_func(X, Y)
ax = plt.axes(projection = '3d')
ax.plot_surface(X, Y, Z, cmap = 'hot', linewidth = 0)
ax.set_title('Surface plot')
plt.show()
#(b)
z_func = lambda x, y: -(x * y ** 2) / (x ** 2 + y ** 2)
x = np.arange(-6, 6.1, 0.1)
y = x.copy()
X, Y = np.meshgrid(x, y)
print(X)
print(Y)
Z = z_func(X, Y)
ax = plt.axes(projection = '3d')
ax.plot_surface(X, Y, Z, cmap = 'hot', linewidth = 0)
ax.set_title('Surface plot')
plt.show()
#(c)
z_func = lambda x, y: (x * y * (x ** 2 - y ** 2)) / (x ** 2 + y ** 2)
x = np.arange(-6, 6.1, 0.1)
y = x.copy()
X, Y = np.meshgrid(x, y)
print(X)
print(Y)
Z = z_func(X, Y)
ax = plt.axes(projection = '3d')
ax.plot_surface(X, Y, Z, cmap = 'hot', linewidth = 0)
ax.set_title('Surface plot')
plt.show()
#(d)
z_func = lambda x, y: y ** 2 - y ** 4 - x ** 2
x = np.arange(-6, 6.1, 0.1)
y = x.copy()
X, Y = np.meshgrid(x, y)
print(X)
print(Y)
Z = z_func(X, Y)
ax = plt.axes(projection = '3d')
ax.plot_surface(X, Y, Z, cmap = 'hot', linewidth = 0)
ax.set_title('Surface plot')
plt.show()